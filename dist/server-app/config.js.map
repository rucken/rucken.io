{"version":3,"file":"config.js","sourceRoot":"","sources":["../../server/config.ts"],"names":[],"mappings":";;AAAA,2CAAwC;AACxC,mCAAwC;AACxC,2BAA8C;AAC9C,6BAA6B;AAE7B,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,IAAI,SAAS,CAAC;AACnD,IAAI,OAAO,GAAG,eAAe,CAAC,GAAG,QAAQ,MAAM,CAAC,CAAC;AACjD,IAAI;IACA,eAAU,CAAC,OAAO,CAAC,CAAC;IACpB,eAAI,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC;IACxB,eAAM,CAAC,GAAG,CAAC,aAAa,OAAO,EAAE,EAAE,MAAM,CAAC,CAAC;CAC9C;AAAC,OAAO,KAAK,EAAE;IACZ,eAAM,CAAC,GAAG,CAAC,0BAA0B,OAAO,EAAE,EAAE,MAAM,CAAC,CAAC;IACxD,IAAI;QACA,OAAO,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC;QAClC,eAAU,CAAC,OAAO,CAAC,CAAC;QACpB,eAAI,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC;QACxB,eAAM,CAAC,GAAG,CAAC,aAAa,OAAO,EAAE,EAAE,MAAM,CAAC,CAAC;KAC9C;IAAC,OAAO,KAAK,EAAE;QACZ,eAAM,CAAC,GAAG,CAAC,0BAA0B,OAAO,EAAE,EAAE,MAAM,CAAC,CAAC;KAC3D;CACJ;AAsBY,QAAA,MAAM,GAAY;IAC3B,GAAG,EAAE;QACD,IAAI,EAAE,QAAQ;QACd,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI;QACjD,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM;KAChE;IACD,OAAO,EAAE;QACL,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK;QACxB,IAAI,EAAE,eAAe,CAAC,EAAE,CAAC;QACzB,OAAO,EAAE,YAAY,CAAC,cAAc,CAAC;KACxC;IACD,MAAM,EAAE;QACJ,SAAS,EAAE,OAAO,CAAC,GAAG,CAAC,gBAAgB;QACvC,KAAK,EAAE;YACH,KAAK,EAAE;gBACH,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,iBAAiB;gBACnC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,kBAAkB;aACxC;YACD,KAAK,EAAE;gBACH,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,iBAAiB;gBACnC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,kBAAkB;aACxC;SACJ;KACJ;CACJ,CAAC;AACF,SAAgB,WAAW;IACvB,OAAO,QAAQ,KAAK,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC;AACxD,CAAC;AAFD,kCAEC;AACD,SAAgB,eAAe,CAAC,QAAgB;IAC5C,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,WAAW,EAAE,EAAE,QAAQ,CAAC,CAAC;AAC5D,CAAC;AAFD,0CAEC;AACD,SAAgB,YAAY,CAAU,QAAgB;IAClD,OAAO,IAAI,CAAC,KAAK,CAAC,iBAAY,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAM,CAAC;AAC/E,CAAC;AAFD,oCAEC","sourcesContent":["import { Logger } from '@nestjs/common';\nimport { config as load } from 'dotenv';\nimport { accessSync, readFileSync } from 'fs';\nimport * as path from 'path';\n\nconst NODE_ENV = process.env.NODE_ENV || 'develop';\nlet envFile = resolveRootFile(`${NODE_ENV}.env`);\ntry {\n    accessSync(envFile);\n    load({ path: envFile });\n    Logger.log(`env file: ${envFile}`, 'Main');\n} catch (error) {\n    Logger.log(`error on get env file: ${envFile}`, 'Main');\n    try {\n        envFile = resolveRootFile(`.env`);\n        accessSync(envFile);\n        load({ path: envFile });\n        Logger.log(`env file: ${envFile}`, 'Main');\n    } catch (error) {\n        Logger.log(`error on get env file: ${envFile}`, 'Main');\n    }\n}\nexport interface IConfig {\n    env: {\n        name: string;\n        port: number;\n        protocol: 'http' | 'https';\n    };\n    project: {\n        title: string;\n        path: string;\n        package: any;\n    };\n    mailer: {\n        transport: string;\n        users: {\n            [key: string]: {\n                name: string;\n                email: string;\n            }\n        }\n    };\n}\nexport const config: IConfig = {\n    env: {\n        name: NODE_ENV,\n        port: process.env.PORT ? +process.env.PORT : 3000,\n        protocol: process.env.PROTOCOL === 'https' ? 'https' : 'http'\n    },\n    project: {\n        title: process.env.TITLE,\n        path: resolveRootFile(''),\n        package: loadRootJson('package.json')\n    },\n    mailer: {\n        transport: process.env.MAILER_TRANSPORT,\n        users: {\n            robot: {\n                name: process.env.MAILER_ROBOT_NAME,\n                email: process.env.MAILER_ROBOT_EMAIL\n            },\n            admin: {\n                name: process.env.MAILER_ADMIN_NAME,\n                email: process.env.MAILER_ADMIN_EMAIL\n            }\n        }\n    }\n};\nexport function getRootPath() {\n    return NODE_ENV === 'develop' ? '../../' : '../../';\n}\nexport function resolveRootFile(fileName: string) {\n    return path.resolve(__dirname, getRootPath(), fileName);\n}\nexport function loadRootJson<T = any>(fileName: string) {\n    return JSON.parse(readFileSync(resolveRootFile(fileName)).toString()) as T;\n}\n\n"]}