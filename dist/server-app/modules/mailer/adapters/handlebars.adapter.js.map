{"version":3,"file":"handlebars.adapter.js","sourceRoot":"","sources":["../../../../../server/modules/mailer/adapters/handlebars.adapter.ts"],"names":[],"mappings":";;AAAA,yBAAyB;AACzB,yCAAyC;AACzC,6BAA6B;AAG7B,MAAM,GAAG,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AAGlC,MAAa,iBAAiB;IAA9B;QACU,yBAAoB,GAAoD,EAAE,CAAC;IAsBrF,CAAC;IApBQ,OAAO,CAAC,IAAS,EAAE,QAAa,EAAE,aAA4B;QACnE,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,MAAM,CAAC;QAC/D,MAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;QACzF,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,EAAE,cAAc,EAAE,EAAE,CAAC,CAAC;QACzI,MAAM,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,YAAY,GAAG,WAAW,CAAC,CAAC;QAExE,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,EAAE;YAC5C,IAAI;gBACF,MAAM,QAAQ,GAAG,EAAE,CAAC,YAAY,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;gBAExD,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,GAAG,UAAU,CAAC,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC,aAAa,EAAE,kBAAkB,EAAE,EAAE,CAAC,CAAC,CAAC;aACpH;YAAC,OAAO,GAAG,EAAE;gBACZ,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC;aACtB;SACF;QAED,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAE5E,OAAO,QAAQ,EAAE,CAAC;IACpB,CAAC;CACF;AAvBD,8CAuBC","sourcesContent":["import * as fs from 'fs';\nimport * as handlebars from 'handlebars';\nimport * as path from 'path';\nimport { MailerOptions } from '../interfaces/mailer-options.interface';\nimport { TemplateAdapter } from '../interfaces/template-adapter.interface';\nconst get = require('lodash.get');\n\n\nexport class HandlebarsAdapter implements TemplateAdapter {\n  private precompiledTemplates: { [name: string]: handlebars.TemplateDelegate } = {};\n\n  public compile(mail: any, callback: any, mailerOptions: MailerOptions): void {\n    const templateExt = path.extname(mail.data.template) || '.hbs';\n    const templateName = path.basename(mail.data.template, path.extname(mail.data.template));\n    const templateDir = path.dirname(mail.data.template) !== '.' ? path.dirname(mail.data.template) : get(mailerOptions, 'template.dir', '');\n    const templatePath = path.join(templateDir, templateName + templateExt);\n\n    if (!this.precompiledTemplates[templateName]) {\n      try {\n        const template = fs.readFileSync(templatePath, 'UTF-8');\n\n        this.precompiledTemplates[templateName] = handlebars.compile(template, get(mailerOptions, 'template.options', {}));\n      } catch (err) {\n        return callback(err);\n      }\n    }\n\n    mail.data.html = this.precompiledTemplates[templateName](mail.data.context);\n\n    return callback();\n  }\n}\n"]}