{"version":3,"file":"mailer-core.module.js","sourceRoot":"","sources":["../../../../server/modules/mailer/mailer-core.module.ts"],"names":[],"mappings":";;;;AACA,2CAAyE;AAEzE,iFAAqE;AAMrE,qDAAiD;AAIjD,IAAa,gBAAgB,wBAA7B,MAAa,gBAAgB;IACpB,MAAM,CAAC,OAAO,CAAC,OAAsB;QAC1C,MAAM,qBAAqB,GAAgB;YACzC,IAAI,EAAE,wCAAc;YACpB,OAAO,EAAE,wCAAc;YACvB,QAAQ,EAAE,OAAO;SAClB,CAAC;QAEF,OAAO;YACL,MAAM,EAAE,kBAAgB;YACxB,SAAS,EAAE;gBACT,qBAAqB;gBAErB,8BAAa;aACd;YACD,OAAO,EAAE;gBACP,8BAAa;aACd;SACF,CAAC;IACJ,CAAC;IAEM,MAAM,CAAC,YAAY,CAAC,OAA2B;QACpD,MAAM,SAAS,GAAe,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;QAEjE,OAAO;YACL,MAAM,EAAE,kBAAgB;YACxB,SAAS,EAAE;gBACT,GAAG,SAAS;gBAEZ,8BAAa;aACd;YACD,OAAO,EAAE,OAAO,CAAC,OAAO;YACxB,OAAO,EAAE;gBACP,8BAAa;aACd;SACF,CAAC;IACJ,CAAC;IAEO,MAAM,CAAC,oBAAoB,CAAC,OAA2B;QAC7D,MAAM,SAAS,GAAe;YAC5B,IAAI,CAAC,0BAA0B,CAAC,OAAO,CAAC;SACzC,CAAC;QAEF,IAAI,OAAO,CAAC,QAAQ,EAAE;YACpB,SAAS,CAAC,IAAI,CAAC;gBACb,OAAO,EAAE,OAAO,CAAC,QAAQ;gBACzB,QAAQ,EAAE,OAAO,CAAC,QAAQ;aAC3B,CAAC,CAAC;SACJ;QAED,OAAO,SAAS,CAAC;IACnB,CAAC;IAEO,MAAM,CAAC,0BAA0B,CAAC,OAA2B;QACnE,IAAI,OAAO,CAAC,UAAU,EAAE;YACtB,OAAO;gBACL,IAAI,EAAE,wCAAc;gBACpB,OAAO,EAAE,wCAAc;gBACvB,UAAU,EAAE,OAAO,CAAC,UAAU;gBAC9B,MAAM,EAAE,OAAO,CAAC,MAAM,IAAI,EAAE;aAC7B,CAAC;SACH;QAED,OAAO;YACL,IAAI,EAAE,wCAAc;YACpB,OAAO,EAAE,wCAAc;YACvB,UAAU,EAAE,CAAO,cAAoC,EAAE,EAAE;gBACzD,OAAO,cAAc,CAAC,mBAAmB,EAAE,CAAC;YAC9C,CAAC,CAAA;YACD,MAAM,EAAE,CAAC,OAAO,CAAC,WAAW,IAAI,OAAO,CAAC,QAAQ,CAAC;SAClD,CAAC;IACJ,CAAC;CACF,CAAA;AAxEY,gBAAgB;IAF5B,eAAM,EAAE;IACR,eAAM,CAAC,EAAE,CAAC;GACE,gBAAgB,CAwE5B;AAxEY,4CAAgB","sourcesContent":["import { CustomValue } from '@nestjs/core/injector/module';\nimport { DynamicModule, Module, Global, Provider } from '@nestjs/common';\n\nimport { MAILER_OPTIONS } from './constants/mailer-options.constant';\n\nimport { MailerOptions } from './interfaces/mailer-options.interface';\nimport { MailerAsyncOptions } from './interfaces/mailer-async-options.interface';\nimport { MailerOptionsFactory } from './interfaces/mailer-options-factory.interface';\n\nimport { MailerService } from './mailer.service';\n\n@Global()\n@Module({})\nexport class MailerCoreModule {\n  public static forRoot(options: MailerOptions): DynamicModule {\n    const MailerOptionsProvider: CustomValue = {\n      name: MAILER_OPTIONS,\n      provide: MAILER_OPTIONS,\n      useValue: options,\n    };\n\n    return {\n      module: MailerCoreModule,\n      providers: [\n        MailerOptionsProvider,\n\n        MailerService,\n      ],\n      exports: [\n        MailerService,\n      ],\n    };\n  }\n\n  public static forRootAsync(options: MailerAsyncOptions): DynamicModule {\n    const providers: Provider[] = this.createAsyncProviders(options);\n\n    return {\n      module: MailerCoreModule,\n      providers: [\n        ...providers,\n\n        MailerService,\n      ],\n      imports: options.imports,\n      exports: [\n        MailerService,\n      ],\n    };\n  }\n\n  private static createAsyncProviders(options: MailerAsyncOptions): Provider[] {\n    const providers: Provider[] = [\n      this.createAsyncOptionsProvider(options),\n    ];\n\n    if (options.useClass) {\n      providers.push({\n        provide: options.useClass,\n        useClass: options.useClass,\n      });\n    }\n\n    return providers;\n  }\n\n  private static createAsyncOptionsProvider(options: MailerAsyncOptions): Provider {\n    if (options.useFactory) {\n      return {\n        name: MAILER_OPTIONS,\n        provide: MAILER_OPTIONS,\n        useFactory: options.useFactory,\n        inject: options.inject || [],\n      };\n    }\n\n    return {\n      name: MAILER_OPTIONS,\n      provide: MAILER_OPTIONS,\n      useFactory: async (optionsFactory: MailerOptionsFactory) => {\n        return optionsFactory.createMailerOptions();\n      },\n      inject: [options.useExisting || options.useClass],\n    };\n  }\n}\n"]}